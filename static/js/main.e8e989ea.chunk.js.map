{"version":3,"sources":["context/UsernameContext.js","components/Header/index.js","components/Home/index.js","components/HomeContainer/index.js","components/Languages/index.js","components/RepositoryCard/index.js","components/Repository/index.js","components/RepositoriesContainer/index.js","components/Contributors/index.js","components/Piechart/index.js","components/RepositoryItemDetails/index.js","components/RepositoryItemDetailsContainer/index.js","components/LinearChart/index.js","components/LangRepoCountPie/index.js","components/LangCommitCountPie/index.js","components/RepoCommitCountPie/index.js","components/Analysis/index.js","components/AnalysisContainer/index.js","components/NotFound/index.js","App.js","index.js"],"names":["UsernameContext","React","createContext","username","changeUserName","Header","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","state","activeStatus","onClickMenuButton","setState","prevState","_createClass","key","value","this","currentPath","window","location","pathname","_jsx","className","children","_jsxs","Link","to","type","onClick","src","alt","Component","apiStatusConstants","Home","profileDetails","apiStatus","errorMsg","getGitHubUserProfileDetails","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","GitHubUserProfileUrl","options","response","data","updatedData","wrap","_context","prev","next","method","fetch","sent","ok","json","avatarUrl","avatar_url","bio","blog","company","createdAt","created_at","email","eventsUrl","events_url","followers","followersUrl","followers_url","following","followingUrl","following_url","gistsUrl","gists_url","gravatarId","gravatar_id","hireable","htmlUrl","html_url","id","login","name","nodeId","node_id","organizationsUrl","organizations_url","publicGists","public_gists","publicRepos","public_repos","receivedEventsUrl","received_events_url","reposUrl","repos_url","siteAdmin","site_admin","starredUrl","starred_url","subscriptionsUrl","subscriptions_url","twitterUsername","twitter_username","updatedAt","updated_at","url","t0","stop","_x","onClickSearch","trim","onClickTryAgain","context","renderGithubDetailsOfProfile","object","RiBuildingLine","IoLocationOutline","IoMdLink","href","renderFailureView","renderLoaderView","Loader","color","height","width","renderContent","_this$state","_Fragment","_this2","_this$context","onChange","event","target","placeholder","HiOutlineSearch","contextType","HomeContainer","Consumer","colors","Languages","props","languageDetails","Math","ceil","random","RepositoryCard","repositoryDetails","description","languages","stargazersCount","forksCount","owner","map","eachLanguage","Repository","repositoriesList","getOwner","getPermission","permission","admin","maintain","pull","push","triage","getGitHubUserRepositoryDetails","eachItem","allowForking","allow_forking","archiveUrl","archive_url","archived","assigneesUrl","assignees_url","blobsUrl","blobs_url","branchesUrl","branches_url","cloneUrl","clone_url","collaboratorsUrl","collaborators_url","commentsUrl","comments_url","compareUrl","compare_url","contentsUrl","contents_url","contributorsUrl","contributors_url","crated_at","defaultBranch","default_branch","deploymentsUrl","deployments_url","disabled","downloadsUrl","downloads_url","fork","forks","forks_count","forksUrl","forks_url","fullName","full_name","gitCommitsUrl","git_commits_url","gitRefsUrl","git_refs_url","gitTagsUrl","git_tags_url","gitUrl","git_url","hasDiscussions","has_discussions","hasDownloads","has_downloads","hasIssues","has_issues","hasPages","has_pages","hasProjects","has_projects","hasWiki","has_wiki","hooksUrl","hooks_url","isTemplate","is_template","issueCommentsUrl","issue_comments_url","issueEventsUrl","issue_events_url","issuesUrl","issues_url","keysUrl","keys_url","labelsUrl","labels_url","language","each","languageUrl","languages_url","license","mergesUrl","merges_url","milestonesUrl","milestones_url","mirrorUrl","mirror_url","notificationsUrl","notifications_url","openIssues","open_issues","openIssuesCount","open_issues_count","permissions","private","pullsUrl","pulls_url","pushedAt","pushed_at","releasesUrl","releases_url","size","sshUrl","ssh_url","stargazers_count","stargazersUrl","stargazers_url","statusesUrl","statuses_url","subscribersUrl","subscribers_url","subscriptionUrl","subscription_url","svnUrl","svn_url","tagsUrl","tags_url","teamsUrl","teams_url","topics","treesUrl","trees_url","visibility","watchers","watchersCount","watchers_count","webCommitSignOffRequired","web_commit_signoff_required","console","log","renderRepositoriesSuccessView","repositoriesLength","eachRepository","renderGitRepositoryDetails","renderNoDataFound","onClickGotoHome","RepositoriesContainer","Contributors","contributorDetails","COLORS","Piechart","pieLanguages","ResponsiveContainer","PieChart","Pie","cx","cy","startAngle","endAngle","innerRadius","outerRadius","dataKey","entry","index","Cell","fill","Legend","iconType","layout","verticalAlign","align","RepositoryItemDetails","repositoryItemDetailsList","isValidUser","getGitHubUserRepositoryItemDetails","_this$props","repoName","lanuages","commitsCount","network_count","issuesCount","contributors","contributor","getContributors","Error","contribution","renderNoDataView","renderGitRepositoryItemDetails","renderRepositoryItemSuccessView","eachContributor","RepositoryItemDetailsContainer","match","params","LinearChart","quarterCommitCount","LineChart","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","YAxis","Tooltip","Line","stroke","LanguageRepoCountPie","langRepoCount","LanguageCommitCountPie","langCommitCount","RepoCommitCountPie","repoCommitCount","Analysis","analysisList","getGitHubUserAnalysisDetails","renderAnalysisSuccessView","analysisListLength","Object","keys","user","quarterCommitData","forEach","keyName","commits","quarterCommitSlicedData","sort","descendingSort","slice","langRepoData","langRepoSlicedData","langCommitData","langCommitSlicedData","repoCommitData","slicedData","renderGitAnalysisDetails","AnalysisContainer","NotFound","App","Provider","Switch","Route","exact","path","component","Redirect","ReactDOM","render","StrictMode","HashRouter","document","getElementById"],"mappings":"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","file":"static/js/main.e8e989ea.chunk.js","sourcesContent":["import React from 'react'\n\nconst UsernameContext = React.createContext({\n  username: '',\n  changeUserName: () => {},\n})\nexport default UsernameContext\n","import {Component} from 'react'\nimport {Link} from 'react-router-dom'\nimport './index.css'\n\nclass Header extends Component {\n  state = {activeStatus: false}\n\n  onClickMenuButton = () => {\n    this.setState(prevState => ({activeStatus: !prevState.activeStatus}))\n  }\n\n  render() {\n    const {activeStatus} = this.state\n    const currentPath = window.location.pathname\n\n    return (\n      <div className=\"container\">\n        <div data-testid=\"header\" className=\"repo-item\">\n          <nav className=\"header-container\">\n            <Link to=\"/\" className=\"heading-nav-link\">\n              <h1 className=\"header-heading\">GitHub Profile Visualizer</h1>\n            </Link>\n\n            <button\n              className=\"menu-button\"\n              type=\"button\"\n              onClick={this.onClickMenuButton}\n              aria-label=\"Toggle navigation menu\"\n            >\n              <img\n                src=\"https://res.cloudinary.com/ddsn9feta/image/upload/v1718691523/menu_l33xs7.png\"\n                alt=\"menu\"\n                className=\"menuSize\"\n              />\n            </button>\n\n            <ul className={`items-nav ${activeStatus ? 'active' : ''}`}>\n              <li>\n                <Link\n                  to=\"/\"\n                  className={\n                    currentPath === '/'\n                      ? 'active-link item-nav-link'\n                      : 'item-nav-link'\n                  }\n                >\n                  Home\n                </Link>\n              </li>\n              <li>\n                <Link\n                  to=\"/repositories\"\n                  className={\n                    currentPath === '/repositories'\n                      ? 'active-link item-nav-link'\n                      : 'item-nav-link'\n                  }\n                >\n                  Repositories\n                </Link>\n              </li>\n              <li>\n                <Link\n                  to=\"/analysis\"\n                  className={\n                    currentPath === '/analysis'\n                      ? 'active-link item-nav-link'\n                      : 'item-nav-link'\n                  }\n                >\n                  Analysis\n                </Link>\n              </li>\n            </ul>\n          </nav>\n\n          {activeStatus && (\n            <nav>\n              <ul className=\"nav-items-container active\">\n                <li>\n                  <Link\n                    to=\"/\"\n                    className={\n                      currentPath === '/'\n                        ? 'active-link item-link'\n                        : 'item-link'\n                    }\n                  >\n                    Home\n                  </Link>\n                </li>\n                <li>\n                  <Link\n                    to=\"/repositories\"\n                    className={\n                      currentPath === '/repositories'\n                        ? 'active-link item-link'\n                        : 'item-link'\n                    }\n                  >\n                    Repositories\n                  </Link>\n                </li>\n                <li>\n                  <Link\n                    to=\"/analysis\"\n                    className={\n                      currentPath === '/analysis'\n                        ? 'active-link item-link'\n                        : 'item-link'\n                    }\n                  >\n                    Analysis\n                  </Link>\n                </li>\n              </ul>\n            </nav>\n          )}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Header\n","import {Component} from 'react'\nimport Loader from 'react-loader-spinner'\nimport {HiOutlineSearch} from 'react-icons/hi'\nimport {RiBuildingLine} from 'react-icons/ri'\nimport {IoLocationOutline} from 'react-icons/io5'\nimport {IoMdLink} from 'react-icons/io'\nimport UsernameContext from '../../context/UsernameContext'\nimport Header from '../Header'\nimport './index.css'\n\nconst apiStatusConstants = {\n  initial: 'INITIAL',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n  inProgress: 'IN_PROGRESS',\n}\n\nclass Home extends Component {\n  state = {\n    profileDetails: [],\n    apiStatus: apiStatusConstants.initial,\n    errorMsg: '',\n  }\n\n  getGitHubUserProfileDetails = async username => {\n    this.setState({apiStatus: apiStatusConstants.inProgress})\n\n    const GitHubUserProfileUrl = `https://apis2.ccbp.in/gpv/profile-details/${username}`\n    const options = {method: 'GET'}\n\n    try {\n      const response = await fetch(GitHubUserProfileUrl, options)\n      if (response.ok) {\n        const data = await response.json()\n        const updatedData = {\n          avatarUrl: data.avatar_url,\n          bio: data.bio,\n          blog: data.blog,\n          company: data.company,\n          createdAt: data.created_at,\n          email: data.email,\n          eventsUrl: data.events_url,\n          followers: data.followers,\n          followersUrl: data.followers_url,\n          following: data.following,\n          followingUrl: data.following_url,\n          gistsUrl: data.gists_url,\n          gravatarId: data.gravatar_id,\n          hireable: data.hireable,\n          htmlUrl: data.html_url,\n          id: data.id,\n          location: data.location,\n          login: data.login,\n          name: data.name,\n          nodeId: data.node_id,\n          organizationsUrl: data.organizations_url,\n          publicGists: data.public_gists,\n          publicRepos: data.public_repos,\n          receivedEventsUrl: data.received_events_url,\n          reposUrl: data.repos_url,\n          siteAdmin: data.site_admin,\n          starredUrl: data.starred_url,\n          subscriptionsUrl: data.subscriptions_url,\n          twitterUsername: data.twitter_username,\n          type: data.type,\n          updatedAt: data.updated_at,\n          url: data.url,\n        }\n        this.setState({\n          profileDetails: [updatedData],\n          apiStatus: apiStatusConstants.success,\n        })\n      } else {\n        this.setState({\n          errorMsg: 'Failed to fetch data.',\n          apiStatus: apiStatusConstants.failure,\n        })\n      }\n    } catch (error) {\n      this.setState({\n        errorMsg: 'Something went wrong. Please try again later.',\n        apiStatus: apiStatusConstants.failure,\n      })\n    }\n  }\n\n  onClickSearch = username => {\n    if (username.trim() === '') {\n      this.setState({\n        errorMsg: 'Enter a valid GitHub username.',\n        profileDetails: [],\n        apiStatus: apiStatusConstants.initial,\n      })\n    } else {\n      this.getGitHubUserProfileDetails(username)\n    }\n  }\n\n  onClickTryAgain = () => {\n    const {changeUserName} = this.context\n    this.setState({\n      apiStatus: apiStatusConstants.initial,\n      errorMsg: '',\n      profileDetails: [],\n    })\n    changeUserName('')\n  }\n\n  renderGithubDetailsOfProfile = () => {\n    const {profileDetails} = this.state\n    const object = profileDetails[0]\n    const {\n      avatarUrl,\n      name,\n      login,\n      bio,\n      blog,\n      followers,\n      following,\n      publicRepos,\n      company,\n      location,\n      organizationsUrl,\n    } = object\n\n    return (\n      <div data-testid=\"repoItem\" className=\"repo-item\">\n        <div className=\"profileDetailsContainer\">\n          <img src={avatarUrl} alt={name} className=\"avatar-url\" />\n          <p className=\"login\">{login}</p>\n          <h1 className=\"name\">{name}</h1>\n          <p className=\"bio\">BIO</p>\n          <p className=\"bio\">{bio}</p>\n          <p className=\"bio\">Blog</p>\n          <p className=\"bio\">{blog}</p>\n          <div className=\"followers-following-public-container\">\n            <div className=\"followers-container\">\n              <p className=\"followers\">{followers}</p>\n              <p className=\"followers-heading\">FOLLOWERS</p>\n            </div>\n            <hr className=\"hor-line\" />\n            <div className=\"following-container\">\n              <p className=\"followers\">{following}</p>\n              <p className=\"followers-heading\">FOLLOWING</p>\n            </div>\n            <hr className=\"hor-line\" />\n            <div className=\"pubic-repos-container\">\n              <p className=\"followers\">{publicRepos}</p>\n              <p className=\"followers-heading\">PUBLIC REPOS</p>\n            </div>\n          </div>\n          <div className=\"bottom-container\">\n            <div className=\"company-container\">\n              <p className=\"company-heading\">Company</p>\n              <div className=\"companyUrl\">\n                <RiBuildingLine className=\"icon-style\" />\n                <p className=\"company\">{company}</p>\n              </div>\n            </div>\n            <div className=\"company-container\">\n              <p className=\"company-heading\">Location</p>\n              <div className=\"companyUrl\">\n                <IoLocationOutline className=\"icon-style\" />\n                <p className=\"company\">{location}</p>\n              </div>\n            </div>\n            <div className=\"company-container\">\n              <h1 className=\"company-heading\">Company Url</h1>\n              <div className=\"companyUrl\">\n                <IoMdLink className=\"icon-style\" />\n                <a href={organizationsUrl} className=\"company\">\n                  {organizationsUrl}\n                </a>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  renderFailureView = () => (\n    <div className=\"failureContainer\">\n      <h1 className=\"heading\">GitHub Profile Visualizer</h1>\n      <img\n        src=\"https://res.cloudinary.com/ddsn9feta/image/upload/v1718604995/Group_7522_f4ueqy.png\"\n        alt=\"failure view\"\n        className=\"error-view\"\n      />\n      <p className=\"errorName\">Something went wrong. Please try again.</p>\n      <button\n        className=\"tryButton\"\n        type=\"button\"\n        onClick={this.onClickTryAgain}\n      >\n        Try again\n      </button>\n    </div>\n  )\n\n  renderLoaderView = () => (\n    <div className=\"loader-container\" data-testid=\"loader\">\n      <Loader type=\"TailSpin\" color=\"#3B82F6\" height={50} width={50} />\n    </div>\n  )\n\n  renderContent = () => {\n    const {errorMsg, apiStatus, profileDetails} = this.state\n    if (errorMsg) {\n      return (\n        <>\n          <p className=\"inputErrorMsg\">{errorMsg}</p>\n          {this.renderFailureView()}\n        </>\n      )\n    }\n\n    if (apiStatus === apiStatusConstants.inProgress) {\n      return this.renderLoaderView()\n    }\n\n    if (profileDetails.length === 0) {\n      return (\n        <div className=\"github-container\">\n          <h1 className=\"heading\">GitHub Profile Visualizer</h1>\n          <img\n            src=\"https://res.cloudinary.com/ddsn9feta/image/upload/v1718599647/Group_21x-mobileview_iyuarb.png\"\n            alt=\"gitHub profile visualizer home page\"\n            className=\"homeImage\"\n          />\n        </div>\n      )\n    }\n\n    return this.renderGithubDetailsOfProfile()\n  }\n\n  render() {\n    const {username, changeUserName} = this.context\n\n    const onChangeUserName = event => {\n      changeUserName(event.target.value)\n    }\n\n    return (\n      <>\n        <Header />\n        <div className=\"home-container\">\n          <div className=\"input-container\">\n            <input\n              type=\"search\"\n              value={username}\n              onChange={onChangeUserName}\n              placeholder=\"Enter GitHub username\"\n              className=\"input-search-style\"\n            />\n            <div className=\"search-icon-container\">\n              <button\n                type=\"button\"\n                onClick={() => this.onClickSearch(username)}\n                className=\"search-button\"\n                data-testid=\"searchButton\"\n                aria-label=\"Search GitHub username\"\n              >\n                <HiOutlineSearch className=\"search-icon\" />\n              </button>\n            </div>\n          </div>\n          {this.renderContent()}\n        </div>\n      </>\n    )\n  }\n}\n\nHome.contextType = UsernameContext\n\nexport default Home\n","import UsernameContext from '../../context/UsernameContext'\nimport Home from '../Home'\n\nconst HomeContainer = () => (\n  <UsernameContext.Consumer>\n    {value => {\n      const {username} = value\n      return <Home username={username} />\n    }}\n  </UsernameContext.Consumer>\n)\nexport default HomeContainer\n","import './index.css'\n\nconst colors = ['style1', 'style2', 'style3', 'style4', 'style5']\n\nconst Languages = props => {\n  const {languageDetails} = props\n  const {name} = languageDetails\n\n  const color = `${colors[Math.ceil(Math.random() * colors.length - 1)]}`\n\n  return (\n    <div className={`language ${color}`}>\n      <p>{name}</p>\n    </div>\n  )\n}\nexport default Languages\n","import {Link} from 'react-router-dom'\nimport Languages from '../Languages'\nimport './index.css'\n\nconst RepositoryCard = props => {\n  const {repositoryDetails} = props\n  // const {name, description, languages, stargazersCount, forksCount, owner} =\n  //   repositoryDetails\n\n  // const {avatarUrl, login} = owner\n\n  const {name, description, languages, stargazersCount, forksCount, owner} =\n    repositoryDetails\n\n  const {avatarUrl, login} = owner\n\n  return (\n    <Link to={`/repositories/${name}`} className=\"repoLinkContainer\">\n      <div data-testid=\"repoItem\" className=\"repo-item\">\n        <div className={` repositoryItemContainer`} data-testid=\"repoItem\">\n          <div className=\"repoHeaderContainer\">\n            <h1 className=\"repoItemHeading\">{name}</h1>\n            <img src={avatarUrl} alt={login} className=\"repoAvatarUrl\" />\n          </div>\n\n          <p className=\"repoItemDesc\">{description}</p>\n          <div className=\"languagesListContainer\">\n            {languages.map(eachLanguage => (\n              <Languages\n                key={eachLanguage.value}\n                languageDetails={eachLanguage}\n              />\n            ))}\n          </div>\n          <div className=\"repoCountContainer\">\n            <div className=\"starContainer\">\n              <img\n                src=\"https://res.cloudinary.com/ddsn9feta/image/upload/v1719294440/Star_-_16px.1_cpjsj4.png\"\n                alt=\"star\"\n                className=\"start-image\"\n              />\n              <p className=\"repoItemStar\">{stargazersCount}</p>\n            </div>\n            <div className=\"forksContainer\">\n              <img\n                src=\"https://res.cloudinary.com/ddsn9feta/image/upload/v1719294440/Git_3_w5zp4b.png\"\n                alt=\"git\"\n                className=\"git-image\"\n              />\n              <p className=\"repoItemForks\">{forksCount} </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Link>\n  )\n}\nexport default RepositoryCard\n","import {Component} from 'react'\n\nimport {Link} from 'react-router-dom'\n\nimport Loader from 'react-loader-spinner'\n\nimport Header from '../Header'\n\nimport RepositoryCard from '../RepositoryCard'\n\nimport './index.css'\n\nconst apiStatusConstants = {\n  initial: 'INITIAL',\n  success: 'SUCCESS',\n  failure: 'Failure',\n  inProgress: 'IN_PROGRESS',\n}\n\nclass Repository extends Component {\n  state = {repositoriesList: [], apiStatus: apiStatusConstants.initial}\n\n  componentDidMount() {\n    const {username} = this.props\n    if (username === '') {\n      this.renderNoDataFound()\n    } else {\n      this.getGitHubUserRepositoryDetails()\n    }\n  }\n\n  getOwner = owner => ({\n    avatarUrl: owner.avatar_url,\n    eventsUrl: owner.events_url,\n    followersUrl: owner.followers_url,\n    followingUrl: owner.following_url,\n    gistsUrl: owner.gists_url,\n    gravatarId: owner.gravatar_id,\n    htmlUrl: owner.html_url,\n    id: owner.id,\n    login: owner.login,\n    nodeId: owner.node_id,\n    organizationsUrl: owner.organizations_url,\n    receivedEventsUrl: owner.received_events_url,\n    reposUrl: owner.repos_url,\n    siteAdmin: owner.site_admin,\n    starredUrl: owner.starred_url,\n    subscriptionsUrl: owner.subscriptions_url,\n    type: owner.type,\n    url: owner.url,\n  })\n\n  getPermission = permission => ({\n    admin: permission.admin,\n    maintain: permission.maintain,\n    pull: permission.pull,\n    push: permission.push,\n    triage: permission.triage,\n  })\n\n  getGitHubUserRepositoryDetails = async () => {\n    const {username} = this.props\n\n    this.setState({apiStatus: apiStatusConstants.inProgress})\n\n    const url = `https://apis2.ccbp.in/gpv/repos/${username}`\n    const options = {\n      method: 'GET',\n    }\n    const response = await fetch(url, options)\n    if (response.ok === true) {\n      const data = await response.json()\n      const updatedData = data.map(eachItem => ({\n        allowForking: eachItem.allow_forking,\n        archiveUrl: eachItem.archive_url,\n        archived: eachItem.archived,\n        assigneesUrl: eachItem.assignees_url,\n        blobsUrl: eachItem.blobs_url,\n        branchesUrl: eachItem.branches_url,\n        cloneUrl: eachItem.clone_url,\n        collaboratorsUrl: eachItem.collaborators_url,\n        commentsUrl: eachItem.comments_url,\n        compareUrl: eachItem.compare_url,\n        contentsUrl: eachItem.contents_url,\n        contributorsUrl: eachItem.contributors_url,\n        createdAt: eachItem.crated_at,\n        defaultBranch: eachItem.default_branch,\n        deploymentsUrl: eachItem.deployments_url,\n        description: eachItem.description,\n        disabled: eachItem.disabled,\n        downloadsUrl: eachItem.downloads_url,\n        eventsUrl: eachItem.events_url,\n        fork: eachItem.fork,\n        forks: eachItem.forks,\n        forksCount: eachItem.forks_count,\n        forksUrl: eachItem.forks_url,\n        fullName: eachItem.full_name,\n        gitCommitsUrl: eachItem.git_commits_url,\n        gitRefsUrl: eachItem.git_refs_url,\n        gitTagsUrl: eachItem.git_tags_url,\n        gitUrl: eachItem.git_url,\n        hasDiscussions: eachItem.has_discussions,\n        hasDownloads: eachItem.has_downloads,\n        hasIssues: eachItem.has_issues,\n        hasPages: eachItem.has_pages,\n        hasProjects: eachItem.has_projects,\n        hasWiki: eachItem.has_wiki,\n        hooksUrl: eachItem.hooks_url,\n        htmlUrl: eachItem.html_url,\n        id: eachItem.id,\n        isTemplate: eachItem.is_template,\n        issueCommentsUrl: eachItem.issue_comments_url,\n        issueEventsUrl: eachItem.issue_events_url,\n        issuesUrl: eachItem.issues_url,\n        keysUrl: eachItem.keys_url,\n        labelsUrl: eachItem.labels_url,\n        language: eachItem.language,\n        languages: eachItem.languages.map(each => ({\n          name: each.name,\n          value: each.value,\n        })),\n        languageUrl: eachItem.languages_url,\n        license: eachItem.license,\n        mergesUrl: eachItem.merges_url,\n        milestonesUrl: eachItem.milestones_url,\n        mirrorUrl: eachItem.mirror_url,\n        name: eachItem.name,\n        nodeId: eachItem.node_id,\n        notificationsUrl: eachItem.notifications_url,\n        openIssues: eachItem.open_issues,\n        openIssuesCount: eachItem.open_issues_count,\n        owner: this.getOwner(eachItem.owner),\n        permissions: this.getPermission(eachItem.permissions),\n        private: eachItem.private,\n        pullsUrl: eachItem.pulls_url,\n        pushedAt: eachItem.pushed_at,\n        releasesUrl: eachItem.releases_url,\n        size: eachItem.size,\n        sshUrl: eachItem.ssh_url,\n        stargazersCount: eachItem.stargazers_count,\n        stargazersUrl: eachItem.stargazers_url,\n        statusesUrl: eachItem.statuses_url,\n        subscribersUrl: eachItem.subscribers_url,\n        subscriptionUrl: eachItem.subscription_url,\n        svnUrl: eachItem.svn_url,\n        tagsUrl: eachItem.tags_url,\n        teamsUrl: eachItem.teams_url,\n        topics: eachItem.topics,\n        treesUrl: eachItem.trees_url,\n        updatedAt: eachItem.updated_at,\n        url: eachItem.url,\n        visibility: eachItem.visibility,\n        watchers: eachItem.watchers,\n        watchersCount: eachItem.watchers_count,\n        webCommitSignOffRequired: eachItem.web_commit_signoff_required,\n      }))\n      console.log(updatedData)\n      this.setState({\n        repositoriesList: updatedData,\n        apiStatus: apiStatusConstants.success,\n      })\n    } else {\n      this.setState({apiStatus: apiStatusConstants.failure})\n    }\n  }\n\n  renderRepositoriesSuccessView = () => {\n    const {repositoriesList} = this.state\n    const repositoriesLength = repositoriesList.length === 0\n\n    return (\n      <div className=\"repositories-success-container\">\n        {repositoriesLength ? (\n          <div className=\"noDataRepoAnalysisContainer\">\n            <img\n              src=\"https://res.cloudinary.com/ddsn9feta/image/upload/v1719653254/Layer_3_1_jxjnnu.png\"\n              alt=\"no repositories\"\n              className=\"no-data-image\"\n            />\n            <h1 className=\"noDataHeading\">No Repositories Found</h1>\n          </div>\n        ) : (\n          <>\n            <h1 className=\"repositorySuccessHeading\">Repositories</h1>\n            <div className=\"repositorySuccessListContainer\">\n              {repositoriesList.map(eachRepository => (\n                <RepositoryCard\n                  repositoryDetails={eachRepository}\n                  key={eachRepository.id}\n                />\n              ))}\n            </div>\n          </>\n        )}\n      </div>\n    )\n  }\n\n  onClickTryAgain = () => {\n    this.getGitHubUserRepositoryDetails()\n  }\n\n  renderFailureView = () => (\n    <div className=\"repositoryFailureContainer\">\n      <img\n        src=\"https://res.cloudinary.com/ddsn9feta/image/upload/v1718604995/Group_7522_f4ueqy.png\"\n        alt=\"failure view\"\n        className=\"error-view\"\n      />\n      <p className=\"errorName\">Something went wrong. Please try again</p>\n      <button\n        className=\"tryButton\"\n        type=\"button\"\n        onClick={this.onClickTryAgain}\n      >\n        Try again\n      </button>\n    </div>\n  )\n\n  renderLoaderView = () => (\n    <div className=\"repository-loader-container\" data-testid=\"loader\">\n      <Loader type=\"TailSpin\" color=\"#3B82F6\" height={50} width={50} />\n    </div>\n  )\n\n  renderGitRepositoryDetails = () => {\n    const {apiStatus} = this.state\n    switch (apiStatus) {\n      case apiStatusConstants.success:\n        return this.renderRepositoriesSuccessView()\n      case apiStatusConstants.failure:\n        return this.renderFailureView()\n      case apiStatusConstants.inProgress:\n        return this.renderLoaderView()\n      default:\n        return null\n    }\n  }\n\n  renderNoDataFound = () => (\n    <div className=\"noDataFoundContainer\">\n      <img\n        src=\"https://res.cloudinary.com/ddsn9feta/image/upload/v1718949987/Repository-NoDataFound-2x_dzw1h2.png\"\n        alt=\"empty repositories\"\n        className=\"repo-no-data-img\"\n      />\n      <h1 className=\"repo-no-data-heading\">No Data Found</h1>\n      <p className=\"repo-no-data-desc\">\n        GitHub Username is empty, please provide a valid username for\n        Repositories\n      </p>\n      <Link to=\"/\">\n        <button\n          type=\"button\"\n          className=\"goto-home-button\"\n          onClick={this.onClickGotoHome}\n        >\n          Go to Home\n        </button>\n      </Link>\n    </div>\n  )\n\n  render() {\n    const {username} = this.props\n    return (\n      <>\n        <Header />\n        <div className=\"repositoriesContainer\">\n          {username === ''\n            ? this.renderNoDataFound()\n            : this.renderGitRepositoryDetails()}\n          {/* {this.renderGitRepositoryDetails()} */}\n        </div>\n      </>\n    )\n  }\n}\nexport default Repository\n","import UsernameContext from '../../context/UsernameContext'\nimport Repository from '../Repository'\n\nconst RepositoriesContainer = () => (\n  <UsernameContext.Consumer>\n    {value => {\n      const {username} = value\n      return <Repository username={username} />\n    }}\n  </UsernameContext.Consumer>\n)\nexport default RepositoriesContainer\n","import './index.css'\n\nconst Contributors = props => {\n  const {contributorDetails} = props\n  const {avatarUrl} = contributorDetails\n\n  return (\n    <div className=\"contributors-profile-container\">\n      <img\n        src={avatarUrl}\n        alt=\"contributor profile\"\n        className=\"contributor-profile\"\n      />\n    </div>\n  )\n}\nexport default Contributors\n","import {PieChart, Pie, Legend, Cell, ResponsiveContainer} from 'recharts'\n\nconst COLORS = [\n  '#0088FE',\n  '#00C49F',\n  '#FFBB28',\n  'purple',\n  'Pink',\n  'Orange',\n  'red',\n]\n\nconst Piechart = props => {\n  const lezend = props\n  const data = lezend.pieLanguages\n\n  return (\n    <ResponsiveContainer width=\"80%\" height={300}>\n      <PieChart>\n        <Pie\n          cx=\"50%\"\n          cy=\"50%\"\n          data={data}\n          startAngle={0}\n          endAngle={360}\n          innerRadius=\"40%\"\n          outerRadius=\"70%\"\n          dataKey=\"value\"\n        >\n          {data.map((entry, index) => (\n            <Cell\n              key={data.name + data.value}\n              fill={COLORS[index % COLORS.length]}\n            />\n          ))}\n        </Pie>\n        <Legend\n          iconType=\"square\"\n          layout=\"vertical\"\n          verticalAlign=\"middle\"\n          align=\"right\"\n        />\n      </PieChart>\n    </ResponsiveContainer>\n  )\n}\nexport default Piechart\n","import {Component} from 'react'\nimport Loader from 'react-loader-spinner'\nimport Header from '../Header'\nimport Languages from '../Languages'\nimport Contributors from '../Contributors'\nimport Piechart from '../Piechart'\nimport './index.css'\n\nconst apiStatusConstants = {\n  initial: 'INITIAL',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n  inProgress: 'IN_PROGRESS',\n}\n\nclass RepositoryItemDetails extends Component {\n  state = {\n    repositoryItemDetailsList: {},\n    apiStatus: apiStatusConstants.initial,\n    isValidUser: true, // To handle the case of invalid or empty username\n  }\n\n  componentDidMount() {\n    const {username} = this.props\n    if (username) {\n      this.getGitHubUserRepositoryItemDetails()\n    } else {\n      this.setState({isValidUser: false})\n    }\n  }\n\n  getGitHubUserRepositoryItemDetails = async () => {\n    const {username, repoName} = this.props\n\n    this.setState({apiStatus: apiStatusConstants.inProgress})\n\n    const url = `https://apis2.ccbp.in/gpv/specific-repo/${username}/${repoName}`\n    const options = {\n      method: 'GET',\n    }\n\n    try {\n      const response = await fetch(url, options)\n      if (response.ok) {\n        const data = await response.json()\n        const updatedData = {\n          name: data.name,\n          description: data.description,\n          languages: data.lanuages,\n          stargazersCount: data.stargazers_count,\n          forksCount: data.forks_count,\n          commitsCount: data.network_count,\n          issuesCount: data.open_issues_count,\n          contributors: data.contributors.map(contributor =>\n            this.getContributors(contributor),\n          ),\n          owner: this.getOwner(data.owner),\n          watchersCount: data.watchers_count,\n        }\n        this.setState({\n          repositoryItemDetailsList: updatedData,\n          apiStatus: apiStatusConstants.success,\n        })\n      } else {\n        throw new Error('Failed to fetch data')\n      }\n    } catch (error) {\n      this.setState({apiStatus: apiStatusConstants.failure})\n    }\n  }\n\n  getContributors = contributor => ({\n    avatarUrl: contributor.avatar_url,\n    contribution: contributor.contribution,\n    eventsUrl: contributor.events_url,\n    followersUrl: contributor.followers_url,\n    followingUrl: contributor.following_url,\n    gistsUrl: contributor.gists_url,\n    gravatarId: contributor.gravatar_id,\n    htmlUrl: contributor.html_url,\n    id: contributor.id,\n    login: contributor.login,\n    nodeId: contributor.node_id,\n    organizationsUrl: contributor.organizations_url,\n    receivedEventsUrl: contributor.received_events_url,\n    reposUrl: contributor.repos_url,\n    siteAdmin: contributor.site_admin,\n    starredUrl: contributor.starred_url,\n    subscriptionsUrl: contributor.subscriptions_url,\n    type: contributor.type,\n    url: contributor.url,\n  })\n\n  getOwner = owner => ({\n    avatarUrl: owner.avatar_url,\n    eventsUrl: owner.events_url,\n    followersUrl: owner.followers_url,\n    followingUrl: owner.following_url,\n    gistsUrl: owner.gists_url,\n    gravatarId: owner.gravatar_id,\n    htmlUrl: owner.html_url,\n    id: owner.id,\n    login: owner.login,\n    nodeId: owner.node_id,\n    organizationsUrl: owner.organizations_url,\n    receivedEventsUrl: owner.received_events_url,\n    reposUrl: owner.repos_url,\n    siteAdmin: owner.site_admin,\n    starredUrl: owner.starred_url,\n    subscriptionsUrl: owner.subscriptions_url,\n    type: owner.type,\n    url: owner.url,\n  })\n\n  onClickTryAgain = () => {\n    this.getGitHubUserRepositoryItemDetails()\n  }\n\n  renderFailureView = () => (\n    <div className=\"repositoryFailureContainer\">\n      <img\n        src=\"https://res.cloudinary.com/ddsn9feta/image/upload/v1718604995/Group_7522_f4ueqy.png\"\n        alt=\"failure view\"\n        className=\"error-view\"\n      />\n      <p className=\"errorName\">Something went wrong. Please try again</p>\n      <button\n        className=\"tryButton\"\n        type=\"button\"\n        onClick={this.onClickTryAgain}\n      >\n        Try again\n      </button>\n    </div>\n  )\n\n  renderNoDataView = () => (\n    <div className=\"noDataFoundContainer\">\n      <img\n        src=\"https://res.cloudinary.com/ddsn9feta/image/upload/v1718949987/Repository-NoDataFound-2x_dzw1h2.png\"\n        alt=\"empty repositories\"\n        className=\"repo-no-data-img\"\n      />\n      <h1 className=\"repo-no-data-heading\">No Data Found</h1>\n      <p className=\"repo-no-data-desc\">\n        GitHub Username is empty, please provide a valid username for\n        Repositories\n      </p>\n    </div>\n  )\n\n  renderLoaderView = () => (\n    <div className=\"repository-loader-container\" data-testid=\"loader\">\n      <Loader type=\"TailSpin\" color=\"#3B82F6\" height={50} width={50} />\n    </div>\n  )\n\n  renderGitRepositoryItemDetails = () => {\n    const {apiStatus, isValidUser} = this.state\n\n    if (!isValidUser) {\n      return this.renderNoDataView()\n    }\n\n    switch (apiStatus) {\n      case apiStatusConstants.success:\n        return this.renderRepositoryItemSuccessView()\n      case apiStatusConstants.failure:\n        return this.renderFailureView()\n      case apiStatusConstants.inProgress:\n        return this.renderLoaderView()\n      default:\n        return null\n    }\n  }\n\n  renderRepositoryItemSuccessView = () => {\n    const {repositoryItemDetailsList} = this.state\n    const {\n      name,\n      description,\n      languages,\n      forksCount,\n      stargazersCount,\n      watchersCount,\n      issuesCount,\n      contributors,\n      owner,\n    } = repositoryItemDetailsList\n    const {avatarUrl, login} = owner\n\n    return (\n      <div data-testid=\"repoItem\" className=\"repo-item\">\n        <div className=\"repoItemDetailsContainer\">\n          <div className=\"repositoryItemContainer1\">\n            <div className=\"repoHeaderContainer\">\n              <h1 className=\"repoItemHeading\">{name}</h1>\n              <img src={avatarUrl} alt={login} className=\"repoAvatarUrl\" />\n            </div>\n\n            <p className=\"repoItemDesc\">{description}</p>\n            <div className=\"languagesListContainer\">\n              {languages.map(eachLanguage => (\n                <Languages\n                  key={eachLanguage.value}\n                  languageDetails={eachLanguage}\n                />\n              ))}\n            </div>\n            <div className=\"repoCountContainer\">\n              <div className=\"starContainer\">\n                <img\n                  src=\"https://res.cloudinary.com/ddsn9feta/image/upload/v1719294440/Star_-_16px.1_cpjsj4.png\"\n                  alt=\"star\"\n                  className=\"start-image\"\n                />\n                <p className=\"repoItemStar\">{stargazersCount}</p>\n              </div>\n              <div className=\"forksContainer\">\n                <img\n                  src=\"https://res.cloudinary.com/ddsn9feta/image/upload/v1719294440/Git_3_w5zp4b.png\"\n                  alt=\"git\"\n                  className=\"git-image\"\n                />\n                <p className=\"repoItemForks\">{forksCount} </p>\n              </div>\n            </div>\n            <div className=\"commit-issues-count-container\">\n              <div className=\"repo-item-counts-container\">\n                <p className=\"repo-item-count-heading\">Watchers Counts</p>\n                <p className=\"repo-item-counts\">{watchersCount}</p>\n              </div>\n              <div className=\"repo-item-counts-container\">\n                <p className=\"repo-item-count-heading\">Issues Counts</p>\n                <p className=\"repo-item-counts\">{issuesCount}</p>\n              </div>\n            </div>\n            <div className=\"contributors-container\">\n              <h1 className=\"contributors-heading\">Contributors :</h1>\n              <p className=\"contributors-desc\">{contributors.length} Members</p>\n              <div className=\"contributors-images-container\">\n                {contributors.map(eachContributor => (\n                  <Contributors\n                    contributorDetails={eachContributor}\n                    key={eachContributor.id}\n                  />\n                ))}\n              </div>\n            </div>\n            <div className=\"pieChart-container\">\n              <h1 className=\"pieChart-language-heading\">Languages :</h1>\n              <Piechart pieLanguages={languages} />\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  render() {\n    return (\n      <>\n        <Header />\n        <div className=\"repositoriesContainer\">\n          {this.renderGitRepositoryItemDetails()}\n        </div>\n      </>\n    )\n  }\n}\n\nexport default RepositoryItemDetails\n","import UsernameContext from '../../context/UsernameContext'\nimport RepositoryItemDetails from '../RepositoryItemDetails'\n\nconst RepositoryItemDetailsContainer = props => {\n  const {match} = props\n  const {params} = match\n  const {repoName} = params\n\n  return (\n    <UsernameContext.Consumer>\n      {value => {\n        const {username} = value\n        return <RepositoryItemDetails username={username} repoName={repoName} />\n      }}\n    </UsernameContext.Consumer>\n  )\n}\nexport default RepositoryItemDetailsContainer\n","import {LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip} from 'recharts'\n\nconst LinearChart = props => {\n  const {quarterCommitCount} = props\n\n  const data = quarterCommitCount\n\n  return (\n    <LineChart\n      width={330}\n      height={200}\n      data={data}\n      margin={{\n        top: 5,\n        right: 30,\n        left: 20,\n        bottom: 5,\n      }}\n    >\n      <CartesianGrid strokeDasharray=\"3 3\" />\n      <XAxis dataKey=\"name\" />\n      <YAxis />\n      <Tooltip />\n      <Line type=\"monotone\" dataKey=\"commits\" stroke=\"#8884d8\" />\n    </LineChart>\n  )\n}\nexport default LinearChart\n","import {PieChart, Pie, Legend, Cell, ResponsiveContainer} from 'recharts'\n\nconst COLORS = [\n  '#0088FE',\n  '#00C49F',\n  '#FFBB28',\n  'Pink',\n  '#F2637F',\n  'Orange',\n  'purple',\n]\n\nconst LanguageRepoCountPie = props => {\n  const {langRepoCount} = props\n  const data = langRepoCount\n\n  return (\n    <ResponsiveContainer width=\"100%\" height={200}>\n      <PieChart>\n        <Pie\n          cx=\"50%\"\n          cy=\"50%\"\n          data={data}\n          startAngle={0}\n          endAngle={360}\n          innerRadius=\"40%\"\n          outerRadius=\"70%\"\n          dataKey=\"value\"\n        >\n          {data.map((entry, index) => (\n            <Cell\n              key={data.name + data.value}\n              fill={COLORS[index % COLORS.length]}\n            />\n          ))}\n        </Pie>\n        <Legend\n          iconType=\"square\"\n          layout=\"vertical\"\n          verticalAlign=\"middle\"\n          align=\"right\"\n        />\n      </PieChart>\n    </ResponsiveContainer>\n  )\n}\n\nexport default LanguageRepoCountPie\n","import {PieChart, Pie, Legend, Cell, ResponsiveContainer} from 'recharts'\n\nconst COLORS = [\n  'Orange',\n  'Pink',\n  '#F2637F',\n  '#0088FE',\n  'yellow',\n  '#00C49F',\n  'purple',\n]\n\nconst LanguageCommitCountPie = props => {\n  const {langCommitCount} = props\n  const data = langCommitCount\n\n  return (\n    <ResponsiveContainer width=\"100%\" height={200}>\n      <PieChart>\n        <Pie\n          cx=\"50%\"\n          cy=\"50%\"\n          data={data}\n          startAngle={0}\n          endAngle={360}\n          innerRadius=\"40%\"\n          outerRadius=\"70%\"\n          dataKey=\"value\"\n        >\n          {data.map((entry, index) => (\n            <Cell\n              key={data.name + data.value}\n              fill={COLORS[index % COLORS.length]}\n            />\n          ))}\n        </Pie>\n        <Legend\n          iconType=\"square\"\n          layout=\"vertical\"\n          verticalAlign=\"middle\"\n          align=\"right\"\n        />\n      </PieChart>\n    </ResponsiveContainer>\n  )\n}\n\nexport default LanguageCommitCountPie\n","import {PieChart, Pie, Legend, Cell, ResponsiveContainer} from 'recharts'\n\nconst COLORS = [\n  'Pink',\n  '#00C49F',\n  '#FFBB28',\n  '#0088FE',\n  '#F2637F',\n  'Orange',\n  'purple',\n]\n\nconst RepoCommitCountPie = props => {\n  const {repoCommitCount} = props\n  const data = repoCommitCount\n\n  return (\n    <ResponsiveContainer width=\"120%\" height={200}>\n      <PieChart>\n        <Pie\n          cx=\"50%\"\n          cy=\"50%\"\n          data={data}\n          startAngle={0}\n          endAngle={360}\n          innerRadius=\"40%\"\n          outerRadius=\"70%\"\n          dataKey=\"value\"\n        >\n          {data.map((entry, index) => (\n            <Cell\n              key={data.name + data.value}\n              fill={COLORS[index % COLORS.length]}\n            />\n          ))}\n        </Pie>\n        <Legend\n          iconType=\"square\"\n          layout=\"vertical\"\n          verticalAlign=\"middle\"\n          align=\"right\"\n        />\n      </PieChart>\n    </ResponsiveContainer>\n  )\n}\n\nexport default RepoCommitCountPie\n","import {Component} from 'react'\n\nimport {Link} from 'react-router-dom'\n\nimport Loader from 'react-loader-spinner'\n\nimport Header from '../Header'\n\nimport LinearChart from '../LinearChart'\n\nimport LanguageRepoCountPie from '../LangRepoCountPie'\n\nimport LanguageCommitCountPie from '../LangCommitCountPie'\n\nimport RepoCommitCountPie from '../RepoCommitCountPie'\n\n// import RepoCommitCountDescription from '../RepoCommitCountDescription'\n\nimport './index.css'\n\nconst apiStatusConstants = {\n  initial: 'INITIAL',\n  success: 'SUCCESS',\n  failure: 'Failure',\n  inProgress: 'IN_PROGRESS',\n}\n\nclass Analysis extends Component {\n  state = {analysisList: {}, apiStatus: apiStatusConstants.initial}\n\n  componentDidMount() {\n    const {username} = this.props\n    if (username === '') {\n      this.renderNoDataFound()\n    } else {\n      this.getGitHubUserAnalysisDetails()\n    }\n  }\n\n  getGitHubUserAnalysisDetails = async () => {\n    const {username} = this.props\n\n    this.setState({apiStatus: apiStatusConstants.inProgress})\n\n    const url = `https://apis2.ccbp.in/gpv/profile-summary/${username}`\n    const options = {\n      method: 'GET',\n    }\n\n    const response = await fetch(url, options)\n\n    if (response.ok === true) {\n      const data = await response.json()\n      const updatedData = data\n      console.log(updatedData)\n      this.setState({\n        analysisList: updatedData,\n        apiStatus: apiStatusConstants.success,\n      })\n    } else {\n      this.setState({apiStatus: apiStatusConstants.failure})\n    }\n  }\n\n  renderAnalysisSuccessView = () => {\n    const {analysisList} = this.state\n    const analysisListLength = Object.keys(analysisList).length === 0\n    const {\n      user,\n      quarterCommitCount,\n      langRepoCount,\n      langCommitCount,\n      repoCommitCount,\n      /* repoCommitCountDescriptions, */\n    } = analysisList\n    const {avatarUrl, login} = user\n\n    //   const repoCommitDescriptionKeys = Object.keys(repoCommitCountDescriptions)\n\n    /* 1. Data for quarterCommitCount that is for LinearChart */\n    const quarterCommitData = []\n    const quarterCommitKeyNames = Object.keys(quarterCommitCount)\n    quarterCommitKeyNames.forEach(keyName => {\n      quarterCommitData.push({\n        name: keyName,\n        commits: quarterCommitCount[keyName],\n      })\n    })\n    const quarterCommitSlicedData = quarterCommitData\n      .sort(this.descendingSort)\n      .slice(0, Object.keys(quarterCommitCount).length)\n    console.log(quarterCommitSlicedData)\n\n    /* 2. Data for LangRepoCount that is \"Repos Per Language\" */\n\n    const langRepoData = []\n    const langRepoKeyNames = Object.keys(langRepoCount)\n    langRepoKeyNames.forEach(keyName => {\n      langRepoData.push({name: keyName, value: langRepoCount[keyName]})\n    })\n    const langRepoSlicedData = langRepoData\n      .sort(this.descendingSort)\n      .slice(0, Object.keys(langRepoCount).length)\n\n    /* 3. Data for LangCommitCount that is fro \"Commits Per Language\" */\n    const langCommitData = []\n    const langCommitKeyNames = Object.keys(langCommitCount)\n    langCommitKeyNames.forEach(keyName => {\n      langCommitData.push({name: keyName, value: langCommitCount[keyName]})\n    })\n    const langCommitSlicedData = langCommitData\n      .sort(this.descendingSort)\n      .slice(0, Object.keys(langCommitCount).length)\n\n    /* 4. Data for repoCommitCount that is for \"Commits Per Repo\"  */\n    const repoCommitData = []\n    const RepoCommitKeyNames = Object.keys(repoCommitCount)\n    RepoCommitKeyNames.forEach(keyName => {\n      repoCommitData.push({name: keyName, value: repoCommitCount[keyName]})\n    })\n    const slicedData = repoCommitData.sort(this.descendingSort).slice(0, 10)\n\n    return (\n      <div className=\"AnalysisSuccessViewContainer\">\n        {analysisListLength ? (\n          <div className=\"noDataRepoAnalysisContainer\">\n            <img\n              src=\"https://res.cloudinary.com/ddsn9feta/image/upload/v1719653254/Layer_3_1_jxjnnu.png\"\n              alt=\"no analysis\"\n              className=\"no-data-image\"\n            />\n            <h1 className=\"noDataHeading\">No Analysis Found!</h1>\n          </div>\n        ) : (\n          <>\n            <div className=\"analysisHeadingContainer\">\n              <h1 className=\"analysis\">{login}</h1>\n              <img src={avatarUrl} alt={login} className=\"repoAvatarUrl\" />\n            </div>\n            <div className=\"linearChartContainer\">\n              <div>\n                <LinearChart quarterCommitCount={quarterCommitSlicedData} />\n              </div>\n            </div>\n            <div className=\"langRepoCommitCountContainer\">\n              <div className=\"pielanguageCountContainer\">\n                <h1 className=\"pieLangCountHeadingRep\">Language Per Repos</h1>\n                <LanguageRepoCountPie langRepoCount={langRepoSlicedData} />\n              </div>\n              <div className=\"pielCommitanguageCountContainer\">\n                <h1 className=\"pieLangCountHeading\">Language Per Commits</h1>\n                <LanguageCommitCountPie\n                  langCommitCount={langCommitSlicedData}\n                />\n              </div>\n            </div>\n            <div className=\"repoCommitDescContainer\">\n              <div className=\"repoCommitContainer\">\n                <h1 className=\"repoCommitHeading\">Commits Per Repo (Top 10)</h1>\n                <RepoCommitCountPie repoCommitCount={slicedData} />\n              </div>\n              {/* <ul className=\"list\">\n                {repoCommitDescriptionKeys.map(eachItem => (\n                  <RepoCommitCountDescription\n                    repoCommitCountDescriptions={repoCommitCountDescriptions}\n                    description={eachItem}\n                    key={eachItem}\n                  />\n                ))}\n              </ul> */}\n            </div>\n          </>\n        )}\n      </div>\n    )\n  }\n\n  onClickTryAgain = () => {\n    this.getGitHubUserAnalysisDetails()\n  }\n\n  renderFailureView = () => (\n    <div className=\"analysisFailureContainer\">\n      <img\n        src=\"https://res.cloudinary.com/ddsn9feta/image/upload/v1718604995/Group_7522_f4ueqy.png\"\n        alt=\"failure view\"\n        className=\"error-view\"\n      />\n      <p className=\"errorName\">Something went wrong. Please try again</p>\n      <button\n        className=\"tryButton\"\n        type=\"button\"\n        onClick={this.onClickTryAgain}\n      >\n        Try again\n      </button>\n    </div>\n  )\n\n  renderLoaderView = () => (\n    <div className=\"analysis-loader-container\" data-testid=\"loader\">\n      <Loader type=\"TailSpin\" color=\"#3B82F6\" height={50} width={50} />\n    </div>\n  )\n\n  renderGitAnalysisDetails = () => {\n    const {apiStatus} = this.state\n\n    switch (apiStatus) {\n      case apiStatusConstants.success:\n        return this.renderAnalysisSuccessView()\n      case apiStatusConstants.failure:\n        return this.renderFailureView()\n      case apiStatusConstants.inProgress:\n        return this.renderLoaderView()\n      default:\n        return null\n    }\n  }\n\n  renderNoDataFound = () => (\n    <div className=\"noDataFoundContainer\">\n      <img\n        src=\"https://res.cloudinary.com/ddsn9feta/image/upload/v1718949987/Repository-NoDataFound-2x_dzw1h2.png\"\n        alt=\"empty analysis\"\n        className=\"analysis-no-data-img\"\n      />\n      <h1 className=\"analysis-no-data-heading\">No Data Found</h1>\n      <p className=\"analysis-no-data-desc\">\n        GitHub Username is empty, please provide a valid username for Analysis.\n      </p>\n      <Link to=\"/\">\n        <button\n          type=\"button\"\n          className=\"goto-home-button\"\n          onClick={this.onClickGotoHome}\n        >\n          Go to Home\n        </button>\n      </Link>\n    </div>\n  )\n\n  render() {\n    const {username} = this.props\n\n    return (\n      <>\n        <Header />\n        <div className=\"analysisContainer\">\n          {username === '' ? (\n            this.renderNoDataFound()\n          ) : (\n            <div className=\"testcaseContainer\">\n              <h1 className=\"analysisTestHeading\">Analysis</h1>\n              {this.renderGitAnalysisDetails()}\n            </div>\n          )}\n        </div>\n      </>\n    )\n  }\n}\nexport default Analysis\n","import UsernameContext from '../../context/UsernameContext'\nimport Analysis from '../Analysis'\n\nconst AnalysisContainer = () => (\n  <UsernameContext.Consumer>\n    {value => {\n      const {username} = value\n      return <Analysis username={username} />\n    }}\n  </UsernameContext.Consumer>\n)\nexport default AnalysisContainer\n","import {Link} from 'react-router-dom'\nimport './index.css'\n\nconst NotFound = () => (\n  <div className=\"notFoundContainer\">\n    <img\n      src=\"https://res.cloudinary.com/ddsn9feta/image/upload/v1719031603/pageNotFound_k2uxao.png\"\n      alt=\"page not found\"\n      className=\"not-found-image\"\n    />\n    <h1 className=\"not-found-heading\">PAGE NOT FOUND</h1>\n    <p className=\"not-found-desc\">\n      we are sorry, the page you requested could not be found Please go back to\n      the homepage.\n    </p>\n    <Link to=\"/\">\n      <button type=\"button\" className=\"not-found-button\">\n        Go to Home\n      </button>\n    </Link>\n  </div>\n)\nexport default NotFound\n","import {Component} from 'react'\n\nimport {Switch, Route, Redirect} from 'react-router-dom'\n\nimport UsernameContext from './context/UsernameContext'\n\nimport HomeContainer from './components/HomeContainer'\n\nimport RepositoriesContainer from './components/RepositoriesContainer'\n\nimport RepositoryItemDetailsContainer from './components/RepositoryItemDetailsContainer'\n\nimport AnalysisContainer from './components/AnalysisContainer'\n\nimport NotFound from './components/NotFound'\n\nimport './App.css'\n\nclass App extends Component {\n  state = {username: ''}\n\n  changeUserName = username => {\n    this.setState({username})\n  }\n\n  render() {\n    const {username} = this.state\n    return (\n      <UsernameContext.Provider\n        value={{username, changeUserName: this.changeUserName}}\n      >\n        <div className=\"appContainer\">\n          <Switch>\n            <Route exact path=\"/\" component={HomeContainer} />\n            <Route\n              exact\n              path=\"/repositories\"\n              component={RepositoriesContainer}\n            />\n            <Route\n              exact\n              path=\"/repositories/:repoName\"\n              component={RepositoryItemDetailsContainer}\n            />\n            <Route exact path=\"/analysis\" component={AnalysisContainer} />\n            <Route exact path=\"/not-found\" component={NotFound} />\n            <Redirect to=\"/not-found\" />\n          </Switch>\n        </div>\n      </UsernameContext.Provider>\n    )\n  }\n}\n\nexport default App\n","import React from 'react'\nimport {HashRouter} from 'react-router-dom'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}